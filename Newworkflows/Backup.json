{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variables": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "Fin",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-27T10:32:55.864Z",
  "id": "Lbg3Eal63hxA6Uvk",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup",
  "nodes": [
    {
      "parameters": {},
      "id": "9644734e-2428-45f8-8d43-d39ffed3d84c",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1568,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "21219ece-284f-4103-99b5-930388e459b4",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        48,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "2fa524f7-53d8-4926-97c5-f0fc8850a91d",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        208,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4a5d0292-ce39-4d19-8d29-164d0c667c06",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        208,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0446cb8a-7cd6-494c-8f0d-67374f4da524",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        208,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Variables\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Variables\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Variables\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "96c21833-4492-47cf-b4a7-94497fd5ea81",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        368,
        320
      ],
      "typeVersion": 1,
      "webhookId": "9a7df154-b7d6-44eb-97a4-7ca181d52d74",
      "credentials": {
        "githubApi": {
          "id": "Sh1O5dMRTvhUpTYl",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Variables\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Variables\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Variables\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "f1d3af9d-738a-4409-9b56-999646e23729",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        368,
        560
      ],
      "typeVersion": 1,
      "webhookId": "6eb0df8b-0807-4440-9281-06510eae9c73",
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "Sh1O5dMRTvhUpTYl",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "c01e2e9c-1fe5-426e-b82d-5a328f8cc0d0",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -1568,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "f5830b66-a038-456a-b17b-9622225b1b27",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -960,
        352
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "HfSVgBprlvvyzk3d",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "37486a77-c0cf-4b0e-8cde-3f5280928b7c",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -112,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "01f2b003-e17d-4b79-bf63-506c86f195f0",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -256,
        352
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "CarlKZ"
            },
            {
              "name": "repo.name",
              "value": "Backup"
            },
            {
              "name": "repo.path",
              "value": "Newworkflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "65bcba78-e72f-45bf-802f-2c15de9d2beb",
      "name": "Variables",
      "type": "n8n-nodes-base.set",
      "position": [
        -1392,
        352
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c6cd9f90-51f0-4753-a93e-355ba9c66303",
      "name": "Fin",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -608,
        128
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a94d429b-dcba-4a87-8043-e9d19e74f384",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -752,
        352
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Variables\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Variables\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Variables\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "06cb87d5-c0d0-4332-b3c2-9e437674f35f",
      "name": "Get a file",
      "type": "n8n-nodes-base.github",
      "position": [
        -496,
        240
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "18b40e79-8ed9-4c02-8c9f-a676a8eb08d1",
      "credentials": {
        "githubApi": {
          "id": "Sh1O5dMRTvhUpTYl",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const workflow = $json;\n\n// Detecta y anonimiza secretos en nodos\nif(workflow.nodes){\n  workflow.nodes.forEach(node => {\n    // Campos de credenciales (n8n los guarda en 'credentials')\n    if(node.credentials){\n      Object.keys(node.credentials).forEach(credKey => {\n        node.credentials[credKey] = 'FILTERED';\n      });\n    }\n    // Campos de parámetros con posibles secretos\n    if(node.parameters){\n      for (const param in node.parameters) {\n        // Filtra posibles nombres de campo con secreto\n        if (\n          param.toLowerCase().includes('apikey') ||\n          param.toLowerCase().includes('token') ||\n          param.toLowerCase().includes('password') ||\n          param.toLowerCase().includes('secret') ||\n          param.toLowerCase().includes('accesskey')\n        ) {\n          node.parameters[param] = 'FILTERED';\n        }\n      }\n    }\n  });\n}\n\nreturn workflow;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1184,
        352
      ],
      "id": "9632fc8a-6c4c-44ab-ad68-5f784141df4e",
      "name": "Code in JavaScript"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Madrid",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "shared": [
    {
      "createdAt": "2025-09-27T10:32:55.872Z",
      "updatedAt": "2025-09-27T10:32:55.872Z",
      "role": "workflow:owner",
      "workflowId": "Lbg3Eal63hxA6Uvk",
      "projectId": "Mg9CftDHMIrQGniA"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-24T13:35:15.000Z",
  "versionId": "61c0b3c6-65aa-4e9e-a41c-e5525778a380"
}